// Generated by CoffeeScript 1.6.3
(function() {
  var TARGET_BUCKET, fs, generateRandomId, oss, ossAPI, _;

  _ = require("underscore");

  ossAPI = require('oss-client');

  fs = require("fs");

  oss = null;

  TARGET_BUCKET = null;

  generateRandomId = function() {
    return "" + ((Math.random() * 36 >> 0).toString(36)) + ((Math.random() * 36 >> 0).toString(36)) + (Date.now().toString(36));
  };

  exports.init = function(key, secret, bucketName) {
    if (!(_.isString(key) && _.isString(secret) && _.isString(bucketName) && key.length > 0 && secret.length > 0 && bucketName.length > 0)) {
      throw new Error("Invalid arguments. key:" + key + ", secret:" + secret);
    }
    TARGET_BUCKET = bucketName;
    oss = new ossAPI.OssClient({
      accessKeyId: key,
      accessKeySecret: secret
    });
  };

  exports.readFile = function(filename, options, callback) {
    var args, pathToTempFile;
    if (oss == null) {
      throw new Error("Please run oss-easy.init() first");
    }
    pathToTempFile = "/tmp/" + (generateRandomId());
    args = {
      bucket: TARGET_BUCKET,
      object: filename,
      dstFile: pathToTempFile
    };
    if ((callback == null) && _.isFunction(options)) {
      callback = options;
    }
    oss.getObject(args, function(err) {
      if (err != null) {
        return callback(err);
      } else {
        return fs.readFile(pathToTempFile, options, callback);
      }
    });
  };

  exports.writeFile = function(filename, data, callback) {
    var pathToTempFile;
    if (oss == null) {
      throw new Error("Please run oss-easy.init() first");
    }
    pathToTempFile = "/tmp/" + (generateRandomId());
    fs.writeFile(pathToTempFile, data, function(err) {
      var args;
      if (err != null) {
        return callback(err);
      } else {
        args = {
          bucket: TARGET_BUCKET,
          object: filename,
          srcFile: pathToTempFile
        };
        return oss.putObject(args, callback);
      }
    });
  };

  exports.uploadFile = function(filename, pathToFile, callback) {
    var args;
    if (oss == null) {
      throw new Error("Please run oss-easy.init() first");
    }
    args = {
      bucket: TARGET_BUCKET,
      object: filename,
      srcFile: pathToFile
    };
    oss.putObject(args, callback);
  };

  exports.downloadFile = function(filename, pathToFile, callback) {
    var args;
    if (oss == null) {
      throw new Error("Please run oss-easy.init() first");
    }
    args = {
      bucket: TARGET_BUCKET,
      object: filename,
      dstFile: pathToFile
    };
    oss.getObject(args, callback);
  };

}).call(this);
